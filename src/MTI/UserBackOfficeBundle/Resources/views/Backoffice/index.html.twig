<!DOCTYPE html>
<html lang="fr" ng-app="surveyManiaApp" id="app-container">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>API</title>
        <link href="{{asset('css/bootstrap.css')}}" rel="stylesheet" type="text/css">
        <link href="{{asset('css/homepage.css')}}" rel="stylesheet" type="text/css">
        <link href="{{asset('css/animate.min.css')}}" rel="stylesheet" type="text/css">
        <link href="{{asset('css/backoffice.css')}}" rel="stylesheet" type="text/css">
        <link href="{{asset('css/font-awesome.min.css')}}" rel="stylesheet" type="text/css">
        <script src="{{asset('js/jquery-1.11.3.min.js')}}"></script>
        <script src="{{asset('js/bootstrap.min.js')}}"></script>
        <script src="{{asset('js/wow.min.js')}}"></script>
		    <script src="{{asset('js/gauge.js')}}"></script>
        <script src="{{asset('js/chart.js')}}"></script>
        <script src="{{asset('js/chartjslegend.js')}}"></script>
    </head>
    <body>
        {% include "::navbar.html.twig" %}
        <div id="sub-menu">
          <div id="burger-menu">
            <div class="fa fa-bars"><span>Menu</span></div>
          </div>
          <div style="display: inline-block;padding-left:50px;">
            <span class="label label-success">Clé publique de l'API</span> {{ app.user.publicapikey }}
            <span class="label label-danger" style="margin-left:50px">Clé privée de l'API</span> {{ app.user.secretapikey }}
            <span class="label label-default" style="margin-left:50px">Token généré</span> {{ token }}
          </div>
        </div>
        <div id="sidebar" role="tablist">
          <ul>
            <li role="presentation">
              <a href="#dashboard" id="dashboard-tab" role="tab" data-toggle="tab" aria-controls="dashboard" aria-expanded="true">
                  <i class="fa fa-th"><span>Dashboard</span></i>
              </a>
            </li>
            <li role="presentation">
              <a href="#profile" id="profile-tab" role="tab" data-toggle="tab" aria-controls="profile">
                <i class="fa fa-user"><span>Profil</span></i>
              </a>
            </li>
          </ul>
        </div>
        <div id="bo-content" class="tab-content">
          <div role="tabpanel" id="dashboard" class="tab-pane fade active in" aria-labelledby="dashboard-tab">
            <div class="col-sm-3" id="limit">
              <div class="chartcontainer">
                <h3>Nombre d'appels</h3>
            		<canvas id="foo"></canvas>
                <div id="gauge-value"></div>
              </div>
            </div>
            <div class="col-sm-3" style="position:relative">
              <div class="chartcontainer">
                <h3 style="margin-bottom:27px;">Statistiques</h3>
                <canvas id="myChart" width="150" height="150"></canvas>
                <div id="legend"></div>
              </div>
            </div>
            <div class="col-sm-6">
              <div class="chartcontainer">
                <h3 style="margin-bottom:27px;">Nombre d'appels</h3>
                <canvas id="myChart2" width="550" height="150"></canvas>
              </div>
            </div>
          </div>
          <div role="tabpanel" id="profile" class="tab-pane fade col-md-6" aria-labelledby="profile-tab">
            <div class="panel panel-default" id="profile-settings">
            <div class="panel-heading">
              <i class="fa fa-user"></i> Profil
            </div>
            <div class="panel-body">
              <div class="form-group group-clear">
                <label class="col-sm-3 control-label">Prénom:</label>
                <div class="col-sm-8">{{app.user.username}}</div>
              </div>
              <div class="form-group group-clear">
                <label class="col-sm-3 control-label">Nom:</label>
                <div class="col-sm-8">{{app.user.lastname}}</div>
              </div>
              <div class="form-group group-clear">
                <label class="col-sm-3 control-label">Email:</label>
                <div class="col-sm-8">{{app.user.email}}</div>
              </div>
            </div>
          </div>
        </div>
		<script type="text/javascript">

    $('#sidebar a').click(function (e) {
      console.log("ok");
      e.preventDefault()
      $(this).tab('show')
    })
        $('.fa-bars').click(function (){
            if ($('#sidebar').is(":visible") === true) {
              $('#sidebar').animate({
                'margin-left': '-240px'
              }, {queue:false});
              $('#bo-content').animate({
                'margin-left':'0px', queue:false}, function(){console.log("ok");$('#sidebar').hide();}
              );
            } else {
                $('#sidebar').show();
                $('#sidebar').animate({
                    'margin-left': '0'
                }, {queue:false});
                $('#bo-content').animate({
                  'margin-left': '240px'
                },{queue:false});
            }
        });

			var opts = {
			  lines: 12, // The number of lines to draw
			  angle: 0, // The length of each line
			  lineWidth: 0.45, // The line thickness
			  pointer: {
				length: 0.60, // The radius of the inner circle
				strokeWidth: 0.033, // The rotation offset
				color: '#000000' // Fill color
			  },
			  limitMax: 'false',   // If true, the pointer will not go past the end of the gauge
			  percentColors: [[0.0, "#a9d70b" ], [0.50, "#f9c802"], [1.0, "#ff0000"]],
			  strokeColor: '#E0E0E0',   // to see which ones work best for you
			  generateGradient: true
			};
			var target = document.getElementById('foo');
			var gauge = new Gauge(target).setOptions(opts);
			gauge.setTextField(document.getElementById("gauge-value"));
			gauge.maxValue = 10; // set max gauge value
			gauge.animationSpeed = 10; // set animation speed (32 is default value)
			gauge.set({{ countcall[1] }}); // set actual value

      var colors = ["#F7464A", "#FDB45C", "#46BFBD"];

      var data = [
          {% for key in calltype %}
            {
              value: {{ key['type'] }},
              color: colors[Math.floor(Math.random()*colors.length)],
              label: "{{ key[1] }}"
            },
          {% endfor %}
        
      ]
      legend(document.getElementById('legend'), data);
      var ctx = document.getElementById("myChart").getContext("2d");
      var myDoughnutChart = new Chart(ctx).Doughnut(data);

    var data2 = {
    labels: [
          {% for key,value in datecount %}
                        "{{ key }}",
          {% endfor %}
    ],
    datasets: [
        {
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: [
            {% for key,value in datecount %}
                        "{{ value }}",
            {% endfor %}
            ]
        }
    ]
};
 var ctx2 = document.getElementById("myChart2").getContext("2d");
    var myLineChart = new Chart(ctx2).Line(data2);
		</script>
	</body>
</html>